<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
    <UseRazorSourceGenerator>false</UseRazorSourceGenerator>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>disable</Nullable>
    <!--Simplify output folder to be common with native profilers output folder-->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <!--Output folder must be lowercased because linux filesystem is case sensitive-->
    <OutputPath>..\..\bin\$(Configuration.toLower())\</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Markdig" Version="0.26.0" />
    <PackageReference Include="MatBlazor" Version="2.9.0-develop-042" />
    <!--<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="6.0.0" />-->
    <!--<PackageReference Include="Microsoft.AspNetCore.Components" Version="6.0.0" />-->
    <!--<PackageReference Include="Microsoft.AspNetCore.Components.WebView" Version="6.0.0" />-->
    <PackageReference Include="Microsoft.Diagnostics.NETCore.Client" Version="0.2.257301" />
  </ItemGroup>

  <ItemGroup>
    <SupportedPlatform Include="browser" />
  </ItemGroup>

  <!--Just to have native profilers code (rust) appear in this project-->
  <ItemGroup>
    <Content Include="..\DrDotnet.Profilers\**" Link="Profilers\%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>

  <!--Include autogenerated interface to interop with native profilers-->
  <ItemGroup>
    <Content Include="..\DrDotnet.Interop\**" Link="Interop\%(RecursiveDir)%(Filename)%(Extension)" />
    <Compile Include="..\DrDotnet.Interop\Interop.cs" Link="Interop\%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>

  <!--Build native profilers as a Pre Build event-->
  <Target Name="PreBuildPrintVars" AfterTargets="PreBuildEvent">
    <Exec Command="echo Configuration: $(Configuration)&#xD;&#xA;echo SolutionDir: $(SolutionDir)&#xD;&#xA;echo ProjectDir: $(ProjectDir)" />
  </Target>
  <Target Condition="'$(Configuration)'=='Debug'" Name="BuildProfilersDebug" AfterTargets="PreBuildPrintVars">
    <Exec Command="cargo build --manifest-path=$(ProjectDir)../DrDotnet.Profilers/Cargo.toml --target-dir=$(ProjectDir)../../bin" />
  </Target>
  <Target Condition="'$(Configuration)'=='Release'" Name="BuildProfilersRelease" AfterTargets="BuildProfilersDebug">
    <Exec Command="cargo build --release --manifest-path=$(ProjectDir)../DrDotnet.Profilers/Cargo.toml --target-dir=$(ProjectDir)../../bin" />
  </Target>

  <!--Make sure native profilers gets copied to publish directory-->
  <ItemGroup>
    <Content Include="*profilers.*"> <!--Cross platform syntax-->
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Content Update="wwwroot\background.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\bootstrap\bootstrap.min.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\FONT-LICENSE">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\font\css\open-iconic-bootstrap.min.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\font\fonts\open-iconic.eot">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\font\fonts\open-iconic.otf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\font\fonts\open-iconic.svg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\font\fonts\open-iconic.ttf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\font\fonts\open-iconic.woff">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\ICON-LICENSE">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\open-iconic\README.md">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="wwwroot\css\site.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

</Project>
