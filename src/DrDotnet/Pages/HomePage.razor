@page "/"
@using DrDotnet.Utils

@inject ISessionDiscovery SessionDiscovery;
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime;

<MudButton Raised="true" Icon="@Icons.Material.Filled.Add" Label="New session" OnClick="OnNewSessionClicked" Style="float: right;"/>

<h3 class="mat-h3">Recent Sessions</h3>

<MudTable T="SessionInfo" Items="@Sessions" class="mat-elevation-z5" AllowSelection="true" OnRowClick="@OnSelectionChanged" PageSize="Int32.MaxValue" ShowPaging="false">
    <HeaderContent>
        <MudTh style="min-width:300px;">Process</MudTh>
        <MudTh style="min-width:200px;">Date (UTC)</MudTh>
        <MudTh style="width:100%;">Profiler</MudTh>
        <MudTh style="min-width:180px;">Download Zip</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.ProcessName</MudTd>
        <MudTd>@context.TimestampDate</MudTd>
        <MudTd>@context.Profiler?.Name</MudTd>
        <MudTd><MudIconButton Icon="@Icons.Material.Filled.Download" OnClick="() => context.DownloadZipAsync(JsRuntime)" OnClickStopPropagation="true" Style="float: right;"/></MudTd>
    </RowTemplate>
</MudTable>

@code
{
    private IEnumerable<SessionInfo> Sessions { get; set; } = Array.Empty<SessionInfo>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Sessions = SessionDiscovery.GetSessions().OrderByDescending(x => x.TimestampDate);
    }

    private void OnSelectionChanged(TableRowClickEventArgs<SessionInfo> tableRowClickEventArgs)
    {
        NavigationManager.NavigateTo($"/sessions/{tableRowClickEventArgs.Item!.Guid}", true);
    }

    private void OnNewSessionClicked(object data)
    {
        NavigationManager.NavigateTo("/processes/", true);
    }
}