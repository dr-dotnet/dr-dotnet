@page "/"
@using DrDotnet.Utils

@inject ISessionDiscovery SessionDiscovery;
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime;

<MatButton Raised="true" Icon="@MatIconNames.Add" Label="New session" OnClick="OnNewSessionClicked" Style="float: right;"/>

<h3 class="mat-h3">Recent Sessions</h3>

<MatTable Items="@Sessions" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="@OnSelectionChanged" PageSize="Int32.MaxValue" ShowPaging="false">
    <MatTableHeader>
        <th style="min-width:300px;">Process</th>
        <th style="min-width:200px;">Date (UTC)</th>
        <th style="width:100%;">Profiler</th>
        <th style="min-width:180px;">Download Zip</th>
    </MatTableHeader>
    <MatTableRow>
        <td>@context.ProcessName</td>
        <td>@context.TimestampDate</td>
        <td>@context.Profiler?.Name</td>
        <td><MatIconButton Icon="@MatIconNames.Cloud_download" OnClick="() => context.DownloadZipAsync(JsRuntime)" OnClickStopPropagation="true" Style="float: right;"/></td>
    </MatTableRow>
</MatTable>

@code
{
    private IEnumerable<SessionInfo> Sessions { get; set; } = Array.Empty<SessionInfo>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Sessions = SessionDiscovery.GetSessions().OrderByDescending(x => x.TimestampDate);
    }

    private void OnSelectionChanged(object data)
    {
        NavigationManager.NavigateTo($"/sessions/{(data as SessionInfo)!.Guid}", true);
    }

    private void OnNewSessionClicked(object data)
    {
        NavigationManager.NavigateTo("/processes/", true);
    }
}