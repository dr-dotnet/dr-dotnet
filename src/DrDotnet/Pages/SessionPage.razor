@page "/sessions/{SessionId:guid}"

@inject ISessionDiscovery SessionDiscovery;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JsRuntime;

@using Markdig;
@using System.IO;
@using System.IO.Compression;

<MatIconButton Style="float: left;" Icon="@MatIconNames.Arrow_back" OnClick="@OnBackClick"/>

<MatButton Raised="true" Icon="@MatIconNames.Cloud_download" Label="Download" OnClick="DownloadFileFromStream" Style="float: right;"/>

<h3 class="mat-h3">Session</h3>

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner mat-elevation-z5" style="padding: 20px;">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6" title="Guid: @Session.Guid">
            <h4 class="mat-h4">@Session.ProcessName</h4>
            <h5 class="mat-h5">@Session.Timestamp</h5>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6" title="ProfilerId: @Session.Profiler.Uuid">
            <h4 class="mat-h4">Profiler</h4>
            <h5 class="mat-h5">@Session.Profiler.Name</h5>
            @Session.Profiler.Description
        </div>
    </div>
</div>

@foreach (var markdownReport in Session.EnumerateFiles().Where(x => x.Extension.ToLower() == ".md"))
{
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner mat-elevation-z5" style="padding: 20px;">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12 mat-body1">
                @markdownReport.Name
            </div>
            <div class="markdown mat-layout-grid-cell mat-layout-grid-cell-span-12">
                @MarkdownFileToMarkup(markdownReport)
            </div>
        </div>
    </div>
}

@foreach (var markdownReport in Session.EnumerateFiles().Where(x => x.Extension.ToLower() == ".html"))
{
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner mat-elevation-z5" style="padding: 20px;">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12 mat-body1">
                @markdownReport.Name
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                @HtmlFileToMarkup(markdownReport)
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public required Guid SessionId { get; init; }

    private SessionInfo? _session;
    private SessionInfo Session => _session ??= SessionDiscovery.GetSession(SessionId);

    private static MarkupString MarkdownFileToMarkup(FileInfo markdownFile)
    {
        var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();

        string markdownContent = File.ReadAllText(markdownFile.FullName);
        string htmlContent = Markdown.ToHtml(markdownContent, pipeline);
        return new MarkupString(htmlContent);
    }
    
    private static MarkupString HtmlFileToMarkup(FileInfo markdownFile)
    {
        string htmlContent = File.ReadAllText(markdownFile.FullName);
        return new MarkupString(htmlContent);
    }

    private void OnBackClick(object data)
    {
        NavigationManager.NavigateTo("/", true);
    }
    
    private async Task DownloadFileFromStream()
    {
        var memoryStream = new MemoryStream();

        using var archive = new ZipArchive(memoryStream, ZipArchiveMode.Create, leaveOpen: true);
      
        foreach (var file in Session.EnumerateFiles())
        {
            archive.CreateEntryFromFile(file.FullName, file.Name);
        }
            
        memoryStream.Seek(0, SeekOrigin.Begin);
        
        using var streamRef = new DotNetStreamReference(stream: memoryStream, leaveOpen: true);

        await JsRuntime.InvokeVoidAsync("downloadFileFromStream", $"session-{Session.Guid}.zip", streamRef);
    }
}
