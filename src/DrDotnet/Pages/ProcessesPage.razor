@page "/processes"

@inject IProcessDiscovery ProcessDiscovery
@inject NavigationManager NavigationManager

<MatIconButton Style="float: left;" Icon="@MatIconNames.Arrow_back" OnClick="@OnBackClick"/>

<h3 class="mat-h3">Dotnet Processes</h3>

<MatTable Items="@_processes" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="@OnSelectionChanged" PageSize="Int32.MaxValue" ShowPaging="false">
    <MatTableHeader>
        <th>Id</th>
        <th>Managed Assembly Name</th>
        <th>Runtime Version</th>
    </MatTableHeader>
    <MatTableRow>
        <td>@context.Id</td>
        <td>@context.ManagedAssemblyName</td>
        <td>@context.Version</td>
    </MatTableRow>
</MatTable>

@code {
    private IList<ProcessInfo> _processes = Array.Empty<ProcessInfo>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ScanProcesses();
    }

    private void ScanProcesses()
    {
        _processes = ProcessDiscovery.GetDotnetProcesses(OnProgress);

        StateHasChanged();
    }

    private float Progress { get; set; }

    private void OnProgress(float progress)
    {
        Progress = progress;
        InvokeAsync(StateHasChanged);
    }

    private void OnSelectionChanged(object data)
    {
        NavigationManager.NavigateTo($"/profilers/{(data as ProcessInfo)!.Id}", true);
    }

    private void OnBackClick(object data)
    {
        NavigationManager.NavigateTo("/", true);
    }
} 